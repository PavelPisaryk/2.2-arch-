.386
.model flat, stdcall
.stack 4096

.data

x1 DWORD 0
y1 DWORD 0
x2 DWORD 2
y2 DWORD 0

isUnderAttack BYTE 0

ExitProcess proto, dwExitCode:dword

.code
main proc

; eax = |x1-x2|
mov eax, x1
sub eax, x2
mul eax

; ebx = |y1-y2|
mov ebx, y1
sub ebx, y2
imul ebx, ebx

cmp eax, ebx
je a
jmp ElseOne

a:
mov isUnderAttack, 1 ; оба бьют друг друга
jmp EndOfIf

ElseOne:
cmp eax, 0 ; бьет ли по прямой (общий икс)
je b
jmp ElseTwo

b:
mov isUnderAttack, 2 ;бьёт ферзь

ElseTwo:
cmp ebx, 0 ; бьет ли по прямой (общий игрек)
je d
jmp EndOfIf

d: 
mov isUnderAttack, 2 ; тоже бьёт ферзь
endOfIf:


invoke ExitProcess,0

main endp
end main
